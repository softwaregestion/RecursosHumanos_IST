#pragma checksum "D:\PROJECTS\IST\RecursosHumanos_IST\IST.RRHH\IST.RRHH.Web\Views\UiGeneral\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "86b156d268e19fc8264ed09ccffcad8ab7722cc6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_UiGeneral_Index), @"mvc.1.0.view", @"/Views/UiGeneral/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"86b156d268e19fc8264ed09ccffcad8ab7722cc6", @"/Views/UiGeneral/Index.cshtml")]
    #nullable restore
    public class Views_UiGeneral_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    #nullable disable
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/jquery/jquery.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/bootstrap/js/bootstrap.bundle.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/metismenu/metisMenu.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/simplebar/simplebar.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/libs/node-waves/waves.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/app.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\PROJECTS\IST\RecursosHumanos_IST\IST.RRHH\IST.RRHH.Web\Views\UiGeneral\Index.cshtml"
  
    ViewBag.Title = "General UI";
    ViewBag.pTitle = "General UI";
    ViewBag.pageTitle = "UI Elements";
    Layout = "~/Views/_Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div class=""row"">
    <div class=""col-lg-12"">
        <div class=""card"">
            <div class=""card-body"">
                <div class=""row"">
                    <div class=""col-xl-6"">
                        <div>
                            <h4 class=""card-title"">Badges</h4>
                            <p class=""card-title-desc"">Add any of the below mentioned modifier classes to change the appearance of a badge.</p>
                            <div>
                                <span class=""badge bg-primary"">Primary</span>
                                <span class=""badge bg-success"">Success</span>
                                <span class=""badge bg-info"">Info</span>
                                <span class=""badge bg-warning"">Warning</span>
                                <span class=""badge bg-danger"">Danger</span>
                                <span class=""badge bg-dark"">Dark</span>
                            </div>

                            <div class=""mt-5"">
         ");
            WriteLiteral(@"                       <h5 class=""font-size-14"">Soft Badge</h5>
                                <div class=""mt-1"">
                                    <span class=""badge badge-soft-primary"">Primary</span>
                                    <span class=""badge badge-soft-success"">Success</span>
                                    <span class=""badge badge-soft-info"">Info</span>
                                    <span class=""badge badge-soft-warning"">Warning</span>
                                    <span class=""badge badge-soft-danger"">Danger</span>
                                    <span class=""badge badge-soft-dark"">Dark</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class=""col-xl-6"">
                        <div class=""mt-4 mt-lg-0"">
                            <h4 class=""card-title"">Pill badges</h4>
                            <p class=""card-title-desc"">
                 ");
            WriteLiteral(@"               Use the <code>.rounded-pill</code> modifier class to make
                                badges more rounded (with a larger <code>border-radius</code>
                                and additional horizontal <code>padding</code>).
                                Useful if you miss the badges from v3.
                            </p>

                            <div>
                                <span class=""badge rounded-pill bg-primary"">Primary</span>
                                <span class=""badge rounded-pill bg-success"">Success</span>
                                <span class=""badge rounded-pill bg-info"">Info</span>
                                <span class=""badge rounded-pill bg-warning"">Warning</span>
                                <span class=""badge rounded-pill bg-danger"">Danger</span>
                                <span class=""badge rounded-pill bg-dark"">Dark</span>
                            </div>

                            <div class=""mt-5"">
      ");
            WriteLiteral(@"                          <h5 class=""font-size-14"">Soft Badge</h5>
                                <div class=""mt-1"">
                                    <span class=""badge rounded-pill badge-soft-primary"">Primary</span>
                                    <span class=""badge rounded-pill badge-soft-success"">Success</span>
                                    <span class=""badge rounded-pill badge-soft-info"">Info</span>
                                    <span class=""badge rounded-pill badge-soft-warning"">Warning</span>
                                    <span class=""badge rounded-pill badge-soft-danger"">Danger</span>
                                    <span class=""badge rounded-pill badge-soft-dark"">Dark</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- end row -->

                <hr class=""mt-5"">
                <div class=""row"">
                    <div cla");
            WriteLiteral(@"ss=""col-xl-6"">
                        <div class=""mt-4"">
                            <h4 class=""card-title"">Badges in Buttons</h4>
                            <p class=""card-title-desc"">Badges can be used as part of links or buttons to provide a counter.</p>

                            <div class=""d-flex flex-wrap gap-2"">
                                <button type=""button"" class=""btn btn-primary"">
                                    Notifications <span class=""badge bg-success ms-1"">4</span>
                                </button>
                                <button type=""button"" class=""btn btn-success"">
                                    Messages <span class=""badge bg-danger ms-1"">2</span>
                                </button>
                                <button type=""button"" class=""btn btn-outline-secondary"">
                                    Draft <span class=""badge bg-success ms-1"">2</span>
                                </button>
                            </div>
   ");
            WriteLiteral(@"                     </div>
                    </div>

                    <div class=""col-xl-6"">
                        <div class=""mt-4"">
                            <h4 class=""card-title"">Badges Position Examples</h4>
                            <p class=""card-title-desc"">Example of Badges Position</p>

                            <div class=""d-flex flex-wrap gap-3"">
                                <button type=""button"" class=""btn btn-primary position-relative"">
                                    Mails <span class=""position-absolute top-0 start-100 translate-middle badge rounded-pill bg-success"">+99 <span class=""visually-hidden"">unread messages</span></span>
                                </button>


                                <button type=""button"" class=""btn btn-light position-relative"">
                                    Alerts <span class=""position-absolute top-0 start-100 translate-middle badge border border-light rounded-circle bg-danger p-1""><span class=""visually-hidden"">unre");
            WriteLiteral(@"ad messages</span></span>
                                </button>

                                <button type=""button"" class=""btn btn-primary position-relative p-0 avatar-xs rounded"">
                                    <span class=""avatar-title bg-transparent"">
                                        <i class=""bx bxs-envelope""></i>
                                    </span>
                                    <span class=""position-absolute top-0 start-100 translate-middle badge border border-light rounded-circle bg-danger p-1""><span class=""visually-hidden"">unread messages</span></span>
                                </button>

                                <button type=""button"" class=""btn btn-light position-relative p-0 avatar-xs rounded-circle"">
                                    <span class=""avatar-title bg-transparent text-reset"">
                                        <i class=""bx bxs-bell""></i>
                                    </span>
                                </button>");
            WriteLiteral(@"

                                <button type=""button"" class=""btn btn-light position-relative p-0 avatar-xs rounded-circle"">
                                    <span class=""avatar-title bg-transparent text-reset"">
                                        <i class=""bx bx-menu""></i>
                                    </span>
                                    <span class=""position-absolute top-0 start-100 translate-middle badge border border-light rounded-circle bg-success p-1""><span class=""visually-hidden"">unread messages</span></span>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- end card -->
    </div>
</div>
<!-- end row -->

<div class=""row"">
    <div class=""col-xl-6"">
        <div class=""card"">
            <div class=""card-body"">

                <h4 class=""card-title"">Popovers</h4>
                <p class=""card-title-des");
            WriteLiteral(@"c"">Four options are available: top, right, bottom, and left aligned. Directions are mirrored when using Bootstrap in RTL.</p>

                <div class=""d-flex flex-wrap gap-2"">

                    <button type=""button"" class=""btn btn-secondary waves-effect"" data-bs-toggle=""popover"" data-bs-placement=""top"" data-bs-content=""Vivamus sagittis lacus vel augue laoreet rutrum faucibus."">
                        Popover on top
                    </button>

                    <button type=""button"" class=""btn btn-secondary waves-effect"" data-bs-toggle=""popover"" data-bs-placement=""right"" data-bs-content=""Vivamus sagittis lacus vel augue laoreet rutrum faucibus."">
                        Popover on right
                    </button>

                    <button type=""button"" class=""btn btn-secondary waves-effect"" data-bs-toggle=""popover"" data-bs-placement=""bottom"" data-bs-content=""Vivamus sagittis lacus vel augue laoreet rutrum faucibus."">
                        Popover on bottom
                   ");
            WriteLiteral(@" </button>

                    <button type=""button"" class=""btn btn-secondary waves-effect"" data-bs-toggle=""popover"" data-bs-placement=""left"" title=""Popover Title"" data-bs-content=""Vivamus sagittis lacus vel augue laoreet rutrum faucibus."">
                        Popover on left
                    </button>

                    <button type=""button"" class=""btn btn-success waves-effect waves-light"" data-bs-toggle=""popover"" data-bs-trigger=""focus"" title=""Dismissible popover"" data-bs-content=""And here's some amazing content. It's very engaging. Right?"">Dismissible popover</button>
                </div>

            </div>
        </div>

    </div>

    <div class=""col-xl-6"">
        <div class=""card"">
            <div class=""card-body"">

                <h4 class=""card-title"">Tooltips</h4>
                <p class=""card-title-desc"">Hover over the links below to see tooltips:</p>

                <div class=""d-flex flex-wrap gap-2"">
                    <button type=""button"" class=""btn b");
            WriteLiteral(@"tn-primary"" data-bs-toggle=""tooltip"" data-bs-placement=""top"" title=""Tooltip on top"">
                        Tooltip on top
                    </button>

                    <button type=""button"" class=""btn btn-primary"" data-bs-toggle=""tooltip"" data-bs-placement=""right"" title=""Tooltip on right"">
                        Tooltip on right
                    </button>

                    <button type=""button"" class=""btn btn-primary"" data-bs-toggle=""tooltip"" data-bs-placement=""bottom"" title=""Tooltip on bottom"">
                        Tooltip on bottom
                    </button>

                    <button type=""button"" class=""btn btn-primary"" data-bs-toggle=""tooltip"" data-bs-placement=""left"" title=""Tooltip on left"">
                        Tooltip on left
                    </button>

                </div>

            </div>
        </div>

    </div>
</div>
<!-- end row -->

<div class=""row"">
    <div class=""col-lg-12"">
        <div class=""card"">
            <div class=""card");
            WriteLiteral(@"-body"">
                <h4 class=""card-title mb-4"">Pagination</h4>

                <div class=""row"">
                    <div class=""col-xl-6"">
                        <h5 class=""font-size-14"">Default Example</h5>
                        <p class=""card-title-desc"">Pagination links indicate a series of related content exists across multiple pages.</p>

                        <nav aria-label=""Page navigation example"">
                            <ul class=""pagination"">
                                <li class=""page-item""><a class=""page-link"" href=""#"">Previous</a></li>
                                <li class=""page-item""><a class=""page-link"" href=""#"">1</a></li>
                                <li class=""page-item""><a class=""page-link"" href=""#"">2</a></li>
                                <li class=""page-item""><a class=""page-link"" href=""#"">3</a></li>
                                <li class=""page-item""><a class=""page-link"" href=""#"">Next</a></li>
                            </ul>
              ");
            WriteLiteral(@"          </nav>

                        <nav aria-label=""Page navigation example"">
                            <ul class=""pagination"">
                                <li class=""page-item"">
                                    <a class=""page-link"" href=""#"" aria-label=""Previous"">
                                        <i class=""mdi mdi-chevron-left""></i>
                                    </a>
                                </li>
                                <li class=""page-item""><a class=""page-link"" href=""#"">1</a></li>
                                <li class=""page-item""><a class=""page-link"" href=""#"">2</a></li>
                                <li class=""page-item""><a class=""page-link"" href=""#"">3</a></li>
                                <li class=""page-item"">
                                    <a class=""page-link"" href=""#"" aria-label=""Next"">
                                        <i class=""mdi mdi-chevron-right""></i>
                                    </a>
                           ");
            WriteLiteral(@"     </li>
                            </ul>
                        </nav>

                    </div>

                    <div class=""col-xl-6"">
                        <div class=""mt-4 mt-lg-0"">
                            <h5 class=""font-size-14"">Disabled and active states</h5>
                            <p class=""card-title-desc"">
                                Pagination links are customizable for
                                different circumstances. Use <code>.disabled</code> for links that appear
                                un-clickable and <code>.active</code> to
                                indicate the current page.
                            </p>


                            <nav aria-label=""..."">
                                <ul class=""pagination"">
                                    <li class=""page-item disabled"">
                                        <a class=""page-link"" href=""#"" tabindex=""-1"">Previous</a>
                                    </li>
     ");
            WriteLiteral(@"                               <li class=""page-item""><a class=""page-link"" href=""#"">1</a></li>
                                    <li class=""page-item active"">
                                        <a class=""page-link"" href=""#"">2 <span class=""sr-only"">(current)</span></a>
                                    </li>
                                    <li class=""page-item""><a class=""page-link"" href=""#"">3</a></li>
                                    <li class=""page-item"">
                                        <a class=""page-link"" href=""#"">Next</a>
                                    </li>
                                </ul>
                            </nav>

                            <nav aria-label=""..."">
                                <ul class=""pagination"">
                                    <li class=""page-item disabled"">
                                        <span class=""page-link""><i class=""mdi mdi-chevron-left""></i></span>
                                    </li>
             ");
            WriteLiteral(@"                       <li class=""page-item""><a class=""page-link"" href=""#"">1</a></li>
                                    <li class=""page-item active"">
                                        <span class=""page-link"">
                                            2
                                            <span class=""sr-only"">(current)</span>
                                        </span>
                                    </li>
                                    <li class=""page-item""><a class=""page-link"" href=""#"">3</a></li>
                                    <li class=""page-item"">
                                        <a class=""page-link"" href=""#""><i class=""mdi mdi-chevron-right""></i></a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
                <!-- end row -->

                <div class=""row"">
                    <div class=""col");
            WriteLiteral(@"-xl-6"">
                        <div class=""mt-4"">
                            <h5 class=""font-size-14"">Sizing</h5>
                            <p class=""card-title-desc"">
                                Fancy larger or smaller pagination? Add <code>.pagination-lg</code> or <code>.pagination-sm</code> for additional
                                sizes.
                            </p>

                            <nav aria-label=""..."">
                                <ul class=""pagination pagination-lg"">
                                    <li class=""page-item disabled"">
                                        <a class=""page-link"" href=""#"" tabindex=""-1"">Previous</a>
                                    </li>
                                    <li class=""page-item""><a class=""page-link"" href=""#"">1</a></li>
                                    <li class=""page-item""><a class=""page-link"" href=""#"">2</a></li>
                                    <li class=""page-item""><a class=""page-link"" href=""#"">3</a");
            WriteLiteral(@"></li>
                                    <li class=""page-item"">
                                        <a class=""page-link"" href=""#"">Next</a>
                                    </li>
                                </ul>
                            </nav>

                            <nav aria-label=""..."">
                                <ul class=""pagination pagination-sm"">
                                    <li class=""page-item disabled"">
                                        <a class=""page-link"" href=""#"" tabindex=""-1"">Previous</a>
                                    </li>
                                    <li class=""page-item""><a class=""page-link"" href=""#"">1</a></li>
                                    <li class=""page-item""><a class=""page-link"" href=""#"">2</a></li>
                                    <li class=""page-item""><a class=""page-link"" href=""#"">3</a></li>
                                    <li class=""page-item"">
                                        <a class=""page-link"" hr");
            WriteLiteral(@"ef=""#"">Next</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>

                    </div>

                    <div class=""col-xl-6"">
                        <div class=""mt-4"">
                            <h5 class=""font-size-14"">Alignment</h5>
                            <p class=""card-title-desc"">
                                Change the alignment of pagination
                                components with flexbox utilities.
                            </p>

                            <nav aria-label=""Page navigation example"">
                                <ul class=""pagination justify-content-center"">
                                    <li class=""page-item disabled"">
                                        <a class=""page-link"" href=""#"" tabindex=""-1"">Previous</a>
                                    </li>
                                    <li class=""page-item""><a class=""page-link");
            WriteLiteral(@""" href=""#"">1</a></li>
                                    <li class=""page-item""><a class=""page-link"" href=""#"">2</a></li>
                                    <li class=""page-item""><a class=""page-link"" href=""#"">3</a></li>
                                    <li class=""page-item"">
                                        <a class=""page-link"" href=""#"">Next</a>
                                    </li>
                                </ul>
                            </nav>

                            <nav aria-label=""Page navigation example"">
                                <ul class=""pagination justify-content-end"">
                                    <li class=""page-item disabled"">
                                        <a class=""page-link"" href=""#"" tabindex=""-1"">Previous</a>
                                    </li>
                                    <li class=""page-item""><a class=""page-link"" href=""#"">1</a></li>
                                    <li class=""page-item""><a class=""page-link"" hre");
            WriteLiteral(@"f=""#"">2</a></li>
                                    <li class=""page-item""><a class=""page-link"" href=""#"">3</a></li>
                                    <li class=""page-item"">
                                        <a class=""page-link"" href=""#"">Next</a>
                                    </li>
                                </ul>
                            </nav>
                        </div>
                    </div>
                </div>
                <!-- end row -->
            </div>
        </div>
        <!-- end card -->
    </div>
</div>
<!-- end row -->

<div class=""row"">
    <div class=""col-xl-6"">
        <div class=""card"">
            <div class=""card-body"">
                <h4 class=""card-title"">Border spinner</h4>
                <p class=""card-title-desc"">Use the border spinners for a lightweight loading indicator.</p>
                <div>
                    <div class=""spinner-border text-primary m-1"" role=""status"">
                        <span class=""sr-on");
            WriteLiteral(@"ly"">Loading...</span>
                    </div>
                    <div class=""spinner-border text-secondary m-1"" role=""status"">
                        <span class=""sr-only"">Loading...</span>
                    </div>
                    <div class=""spinner-border text-success m-1"" role=""status"">
                        <span class=""sr-only"">Loading...</span>
                    </div>
                    <div class=""spinner-border text-info m-1"" role=""status"">
                        <span class=""sr-only"">Loading...</span>
                    </div>
                    <div class=""spinner-border text-warning m-1"" role=""status"">
                        <span class=""sr-only"">Loading...</span>
                    </div>
                    <div class=""spinner-border text-danger m-1"" role=""status"">
                        <span class=""sr-only"">Loading...</span>
                    </div>
                    <div class=""spinner-border text-dark m-1"" role=""status"">
                        <sp");
            WriteLiteral(@"an class=""sr-only"">Loading...</span>
                    </div>
                </div>

            </div>
        </div>
    </div>
    <div class=""col-xl-6"">
        <div class=""card"">
            <div class=""card-body"">
                <h4 class=""card-title"">Growing spinner</h4>
                <p class=""card-title-desc"">If you don’t fancy a border spinner, switch to the grow spinner. While it doesn’t technically spin, it does repeatedly grow!</p>
                <div>
                    <div class=""spinner-grow text-primary m-1"" role=""status"">
                        <span class=""sr-only"">Loading...</span>
                    </div>
                    <div class=""spinner-grow text-secondary m-1"" role=""status"">
                        <span class=""sr-only"">Loading...</span>
                    </div>
                    <div class=""spinner-grow text-success m-1"" role=""status"">
                        <span class=""sr-only"">Loading...</span>
                    </div>
                ");
            WriteLiteral(@"    <div class=""spinner-grow text-info m-1"" role=""status"">
                        <span class=""sr-only"">Loading...</span>
                    </div>
                    <div class=""spinner-grow text-warning m-1"" role=""status"">
                        <span class=""sr-only"">Loading...</span>
                    </div>
                    <div class=""spinner-grow text-danger m-1"" role=""status"">
                        <span class=""sr-only"">Loading...</span>
                    </div>
                    <div class=""spinner-grow text-dark m-1"" role=""status"">
                        <span class=""sr-only"">Loading...</span>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
<!-- end row -->
<!-- JAVASCRIPT -->
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "86b156d268e19fc8264ed09ccffcad8ab7722cc631054", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "86b156d268e19fc8264ed09ccffcad8ab7722cc632094", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "86b156d268e19fc8264ed09ccffcad8ab7722cc633134", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "86b156d268e19fc8264ed09ccffcad8ab7722cc634174", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "86b156d268e19fc8264ed09ccffcad8ab7722cc635214", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n<!-- App js -->\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "86b156d268e19fc8264ed09ccffcad8ab7722cc636281", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n\r\n\r\n");
        }
        #pragma warning restore 1998
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; } = default!;
        #nullable disable
        #nullable restore
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; } = default!;
        #nullable disable
    }
}
#pragma warning restore 1591
